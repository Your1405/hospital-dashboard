# Generated by Django 4.1.5 on 2023-02-01 01:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('city', models.CharField(max_length=128)),
                ('state', models.CharField(choices=[('AK', 'Alaska'), ('AL', 'Alabama'), ('AR', 'Arkansas'), ('AZ', 'Arizona'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DC', 'District of Columbia'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('IA', 'Iowa'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('MA', 'Massachusetts'), ('MD', 'Maryland'), ('ME', 'Maine'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MO', 'Missouri'), ('MS', 'Mississippi'), ('MT', 'Montana'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NE', 'Nebraska'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NV', 'Nevada'), ('NY', 'New York'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VA', 'Virginia'), ('VT', 'Vermont'), ('WA', 'Washington'), ('WI', 'Wisconsin'), ('WV', 'West Virginia'), ('WY', 'Wyoming')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall', models.CharField(max_length=16)),
                ('mortality', models.CharField(max_length=16)),
                ('safety', models.CharField(max_length=16)),
                ('readmission', models.CharField(max_length=16)),
                ('experience', models.CharField(max_length=16)),
                ('effectiveness', models.CharField(max_length=16)),
                ('timeliness', models.CharField(max_length=16)),
                ('imaging', models.CharField(max_length=16)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.facility')),
            ],
        ),
        migrations.AddField(
            model_name='facility',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.type'),
        ),
        migrations.CreateModel(
            name='FacilityProcedure',
            fields=[
                ('facility_procedure_id', models.AutoField(primary_key=True, serialize=False)),
                ('cost', models.IntegerField()),
                ('quality', models.CharField(max_length=16)),
                ('value', models.CharField(max_length=16)),
                ('facility_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.facility')),
                ('procedure_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.procedure')),
            ],
            options={
                'db_table': 'dashboard_facility_procedure',
                'managed': True,
                'unique_together': {('facility_id', 'procedure_id')},
            },
        ),
    ]
